@use '@/styles/utils' as *;

$sp_rate: 0.4 !default;

.imageWrap {
  height: rem(480) !important;
  width: rem(640) !important;
  margin: 0 rem(60);

  @include mobile {
    height: rem(480) * 0.43 !important;
    width: rem(640) * 0.43 !important;
    margin: 0 rem(60) * 0.43;
  }
}

.image {
  height: 100%;
  width: 100%;
  object-fit: cover;
}

.articleWrapper {
  display: flex;
  width: 100%;
  justify-content: center;
  align-items: center;
  margin-top: rem(80);
}

.container {
  display: flex;
  max-width: rem(800+72+72);
  width: 100%;
  flex-direction: column;
  align-items: center;
}

h3.title {
  display: flex;
  justify-content: center;
  font-size: clamp(rem(20), rem(44), rem(44));
  color: var(--color-black);

  @include mobile {
    padding-right: rem(15);
    padding-left: rem(15);
  }
}

.glassesGroupPC {
  display: flex;
  margin-top: rem(16);
  width: 100%;
  gap: rem(20);
  overflow: hidden;
  justify-content: center;

  @include wideScreen {
    display: none;
  }
}

.glassesGroupWide {
  display: none;
  margin-top: rem(16);
  width: 100%;
  gap: rem(20);
  overflow: hidden;
  justify-content: center;

  @include wideScreen {
    display: flex;
  }

  @include mobile {
    display: none;
  }
}

.glassesGroupMobile {
  display: none;
  margin-top: rem(16);
  width: 100%;
  gap: rem(20);
  overflow: hidden;
  justify-content: center;

  @include mobile {
    display: flex;
  }
}

p.description {
  color: var(--color-black);
  margin-top: rem(32);
  font-size: rem(24);
  min-height: rem(344);
  max-width: rem(800);
  width: 100%;

  .link {
    @include action;
    color: var(--color-primary);
  }

  @include wideScreen {
    padding-left: rem(10);
    padding-right: rem(10);
    padding-bottom: rem(100);
  }
}

.button {
  position: relative;
  height: rem(120);
  width: rem(120);
  background-color: transparent;
  border: none;

  @include action;

  @include mobile {
    height: rem(120) * $sp_rate * 0.6;
    width: rem(120) * $sp_rate * 0.6;
  }
}

.polygon {
  z-index: -100;
  fill: var(--color-primary);
  width: rem(120);
  min-width: rem(120);

  @include mobile {
    width: rem(120) * $sp_rate * 0.6;
    min-width: rem(120) * $sp_rate * 0.6;
  }
}

.arrowButton {
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  width: rem(70);
  height: rem(70);
  top: rem(25);
  left: rem(25);

  @include mobile {
    width: rem(70) * $sp_rate * 0.6;
    height: rem(70) * $sp_rate * 0.6;
    top: rem(25) * $sp_rate * 0.6;
    left: rem(25) * $sp_rate * 0.6;
  }
}

.spacer {
  width: rem(20);
}

$arrow-width: rem(35);
$arrow-height: rem(8);

.arrow {
  display: block;
  position: relative;

  &::before,
  &::after {
    position: absolute;
    content: '';
    display: block;
    width: $arrow-width;
    height: $arrow-height;
    border-radius: calc($arrow-height / 2);
    background-color: var(--color-white);
  }
  &.left {
    &::before,
    &::after {
      left: 0;
      transform-origin: calc($arrow-height / 2) center;
    }

    &::before {
      transform: translate(
          calc(-1 * $arrow-width / 2),
          calc(-1 * $arrow-height / 2)
        )
        rotate(45deg);
    }
    &::after {
      transform: translate(
          calc(-1 * $arrow-width / 2),
          calc(-1 * $arrow-height / 2)
        )
        rotate(315deg);
    }
  }
  &.right {
    &::before,
    &::after {
      right: 0;
      transform-origin: calc(100% - $arrow-height / 2) center;
    }

    &::before {
      transform: translate(calc($arrow-width / 2), calc(-1 * $arrow-height / 2))
        rotate(45deg);
    }
    &::after {
      transform: translate(calc($arrow-width / 2), calc(-1 * $arrow-height / 2))
        rotate(315deg);
    }
  }

  @include mobile {
    &::before,
    &::after {
      position: absolute;
      content: '';
      display: block;
      width: $arrow-width * $sp_rate;
      height: $arrow-height * $sp_rate;
      border-radius: calc($arrow-height * $sp_rate / 2);
      background-color: var(--color-white);
    }
    &.left {
      &::before,
      &::after {
        left: 0;
        transform-origin: calc($arrow-height * $sp_rate / 2) center;
      }

      &::before {
        transform: translate(
            calc(-1 * $arrow-width * $sp_rate / 2),
            calc(-1 * $arrow-height * $sp_rate / 2)
          )
          rotate(45deg);
      }
      &::after {
        transform: translate(
            calc(-1 * $arrow-width * $sp_rate / 2),
            calc(-1 * $arrow-height * $sp_rate / 2)
          )
          rotate(315deg);
      }
    }
    &.right {
      &::before,
      &::after {
        right: 0;
        transform-origin: calc(100% - $arrow-height * $sp_rate / 2) center;
      }

      &::before {
        transform: translate(
            calc($arrow-width * $sp_rate / 2),
            calc(-1 * $arrow-height * $sp_rate / 2)
          )
          rotate(45deg);
      }
      &::after {
        transform: translate(
            calc($arrow-width * $sp_rate / 2),
            calc(-1 * $arrow-height * $sp_rate / 2)
          )
          rotate(315deg);
      }
    }
  }
}
